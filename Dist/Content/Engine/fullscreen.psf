#include <Psybrus.psh>

//////////////////////////////////////////////////////////////////////////
// Vertex shader
#if VERTEX_SHADER

VS_IN_BEGIN
	DECLARE_IN( float4, InPosition_, POSITION );
	DECLARE_IN( float4, InNormal_, NORMAL );
	DECLARE_IN( float4, InTexCoord_, TEXCOORD0 );
	DECLARE_IN( float4, InColour_, COLOR0 );
VS_IN_END

VS_OUT_BEGIN
	DECLARE_OUT( float4, VsColour0, COLOR0 );
	DECLARE_OUT( float4, VsNormal, NORMAL );
	DECLARE_OUT( float4, VsTexCoord0, TEXCOORD0 );
VS_OUT_END

VS_MAIN( vertexMain )
{
	VS_ENTER;
	OUT_POSITION = IN( InPosition_ );
	OUT( VsNormal ) = IN( InNormal_ );
	OUT( VsTexCoord0 ) = IN( InTexCoord_ );
	OUT( VsColour0 ) = IN( InColour_ );
	VS_EXIT;
}

#endif

//////////////////////////////////////////////////////////////////////////
// Pixel shader
#if PIXEL_SHADER

PS_IN_BEGIN
	DECLARE_IN( float4, VsColour0, COLOR0 );
	DECLARE_IN( float4, VsNormal, NORMAL );
	DECLARE_IN( float4, VsTexCoord0, TEXCOORD0 );
PS_IN_END
#include <PsybrusOutput.psh>
//////////////////////////////////////////////////////////////////////////
// pixelMain
PSY_SAMPLER_2D( ColourTex );
PSY_SAMPLER_2D( DepthTex );

PS_MAIN( pixelMain )
{
	PS_ENTER;
	float4 Colour = PSY_SAMPLE_2D( ColourTex, IN( VsTexCoord0 ).xy );
	//float Depth = PSY_SAMPLE_2D( DepthTex, VsTexCoord0.xy ).x;
	outputFrag[0] = Colour; //float4( Depth, Depth, Depth, 1.0 ) * i.Colour_;
	PS_EXIT;
}

#endif
