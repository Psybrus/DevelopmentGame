// DO NOT MODIFY. Autogenerated by ScnShaderImport::regenerateShaderDataHeader.
#ifndef __UniformMaterial_PSH__
#define __UniformMaterial_PSH__
#include <PsybrusTypes.psh>

#if PSY_INPUT_BACKEND_TYPE == PSY_BACKEND_TYPE_GLSL_ES
uniform float4 ScnShaderMaterialUniformBlockDataVS_XMaterialBaseColour_;
#define MaterialBaseColour_ ScnShaderMaterialUniformBlockDataVS_XMaterialBaseColour_
uniform float ScnShaderMaterialUniformBlockDataVS_XMaterialMetallic_;
#define MaterialMetallic_ ScnShaderMaterialUniformBlockDataVS_XMaterialMetallic_
uniform float ScnShaderMaterialUniformBlockDataVS_XMaterialSpecular_;
#define MaterialSpecular_ ScnShaderMaterialUniformBlockDataVS_XMaterialSpecular_
uniform float ScnShaderMaterialUniformBlockDataVS_XMaterialRoughness_;
#define MaterialRoughness_ ScnShaderMaterialUniformBlockDataVS_XMaterialRoughness_
uniform float ScnShaderMaterialUniformBlockDataVS_XMaterialUnused_;
#define MaterialUnused_ ScnShaderMaterialUniformBlockDataVS_XMaterialUnused_


#endif

#if PSY_INPUT_BACKEND_TYPE == PSY_BACKEND_TYPE_GLSL
layout(std140) uniform ScnShaderMaterialUniformBlockData
{
	float4 MaterialBaseColour_;
	float MaterialMetallic_;
	float MaterialSpecular_;
	float MaterialRoughness_;
	float MaterialUnused_;
};

struct ScnShaderMaterialUniformBlockDataInstance
{
	float4 MaterialBaseColour_;
	float MaterialMetallic_;
	float MaterialSpecular_;
	float MaterialRoughness_;
	float MaterialUnused_;
};

layout(std140) uniform ScnShaderMaterialUniformBlockDataInstanced
{
	ScnShaderMaterialUniformBlockDataInstance MaterialInstances_[128];
};

#endif

#if PSY_INPUT_BACKEND_TYPE == PSY_BACKEND_TYPE_D3D11
cbuffer ScnShaderMaterialUniformBlockData
{
	float4 MaterialBaseColour_;
	float MaterialMetallic_;
	float MaterialSpecular_;
	float MaterialRoughness_;
	float MaterialUnused_;
};

struct ScnShaderMaterialUniformBlockDataInstance
{
	float4 MaterialBaseColour_;
	float MaterialMetallic_;
	float MaterialSpecular_;
	float MaterialRoughness_;
	float MaterialUnused_;
};

cbuffer ScnShaderMaterialUniformBlockDataInstanced
{
	ScnShaderMaterialUniformBlockDataInstance MaterialInstances_[128];
};

#endif

#endif // include guard
