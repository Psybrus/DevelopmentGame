// DO NOT MODIFY. Autogenerated by ScnShaderImport::regenerateShaderDataHeader.
#ifndef __UniformToneMapping_PSH__
#define __UniformToneMapping_PSH__
#include <PsybrusTypes.psh>

#if PSY_INPUT_BACKEND_TYPE == PSY_BACKEND_TYPE_GLSL_ES
uniform float ScnShaderToneMappingUniformBlockDataVS_XToneMappingExposure_;
#define ToneMappingExposure_ ScnShaderToneMappingUniformBlockDataVS_XToneMappingExposure_
uniform float ScnShaderToneMappingUniformBlockDataVS_XToneMappingMiddleGrey_;
#define ToneMappingMiddleGrey_ ScnShaderToneMappingUniformBlockDataVS_XToneMappingMiddleGrey_
uniform float ScnShaderToneMappingUniformBlockDataVS_XToneMappingWhitePoint_;
#define ToneMappingWhitePoint_ ScnShaderToneMappingUniformBlockDataVS_XToneMappingWhitePoint_
uniform float ScnShaderToneMappingUniformBlockDataVS_XToneMappingA_;
#define ToneMappingA_ ScnShaderToneMappingUniformBlockDataVS_XToneMappingA_
uniform float ScnShaderToneMappingUniformBlockDataVS_XToneMappingB_;
#define ToneMappingB_ ScnShaderToneMappingUniformBlockDataVS_XToneMappingB_
uniform float ScnShaderToneMappingUniformBlockDataVS_XToneMappingC_;
#define ToneMappingC_ ScnShaderToneMappingUniformBlockDataVS_XToneMappingC_
uniform float ScnShaderToneMappingUniformBlockDataVS_XToneMappingD_;
#define ToneMappingD_ ScnShaderToneMappingUniformBlockDataVS_XToneMappingD_
uniform float ScnShaderToneMappingUniformBlockDataVS_XToneMappingE_;
#define ToneMappingE_ ScnShaderToneMappingUniformBlockDataVS_XToneMappingE_
uniform float ScnShaderToneMappingUniformBlockDataVS_XToneMappingF_;
#define ToneMappingF_ ScnShaderToneMappingUniformBlockDataVS_XToneMappingF_
uniform float ScnShaderToneMappingUniformBlockDataVS_XToneMappingLuminanceMin_;
#define ToneMappingLuminanceMin_ ScnShaderToneMappingUniformBlockDataVS_XToneMappingLuminanceMin_
uniform float ScnShaderToneMappingUniformBlockDataVS_XToneMappingLuminanceMax_;
#define ToneMappingLuminanceMax_ ScnShaderToneMappingUniformBlockDataVS_XToneMappingLuminanceMax_
uniform float ScnShaderToneMappingUniformBlockDataVS_XToneMappingLuminanceTransferRate_;
#define ToneMappingLuminanceTransferRate_ ScnShaderToneMappingUniformBlockDataVS_XToneMappingLuminanceTransferRate_


#endif

#if PSY_INPUT_BACKEND_TYPE == PSY_BACKEND_TYPE_GLSL
layout(std140) uniform ScnShaderToneMappingUniformBlockData
{
	float ToneMappingExposure_;
	float ToneMappingMiddleGrey_;
	float ToneMappingWhitePoint_;
	float ToneMappingA_;
	float ToneMappingB_;
	float ToneMappingC_;
	float ToneMappingD_;
	float ToneMappingE_;
	float ToneMappingF_;
	float ToneMappingLuminanceMin_;
	float ToneMappingLuminanceMax_;
	float ToneMappingLuminanceTransferRate_;
};

#endif

#if PSY_INPUT_BACKEND_TYPE == PSY_BACKEND_TYPE_D3D11
cbuffer ScnShaderToneMappingUniformBlockData
{
	float ToneMappingExposure_;
	float ToneMappingMiddleGrey_;
	float ToneMappingWhitePoint_;
	float ToneMappingA_;
	float ToneMappingB_;
	float ToneMappingC_;
	float ToneMappingD_;
	float ToneMappingE_;
	float ToneMappingF_;
	float ToneMappingLuminanceMin_;
	float ToneMappingLuminanceMax_;
	float ToneMappingLuminanceTransferRate_;
};

#endif

#endif // include guard
