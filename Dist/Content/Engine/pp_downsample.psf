#include <Psybrus.psh>

//////////////////////////////////////////////////////////////////////////
// Vertex shader
#if VERTEX_SHADER

VS_IN_BEGIN
	DECLARE_IN( float4, InPosition_, POSITION );
	DECLARE_IN( float4, InTexCoord_, TEXCOORD0 );
VS_IN_END

VS_OUT_BEGIN
	DECLARE_OUT( float4, VsTexCoord0, TEXCOORD0 );
VS_OUT_END

VS_MAIN( vertexMain )
{
	VS_ENTER;
	OUT_POSITION = IN( InPosition_ ).xyzw;
	OUT( VsTexCoord0 ) = IN( InTexCoord_ );
	VS_EXIT;
}
#endif

//////////////////////////////////////////////////////////////////////////
// Pixel shader
#if PIXEL_SHADER

PS_IN_BEGIN
	DECLARE_IN( float4, VsTexCoord0, TEXCOORD0 );
PS_IN_END
#include <PsybrusOutput.psh>
PSY_SAMPLER_2D( HDRTex );

PS_MAIN( pixelMain )
{
	PS_ENTER;
	float2 TexCoord = IN( VsTexCoord0 ).xy;

#if PSY_INPUT_BACKEND_TYPE == PSY_BACKEND_TYPE_GLSL || PSY_INPUT_BACKEND_TYPE == PSY_BACKEND_TYPE_GLSL_ES
	// Need to flip in OpenGL.
	//TexCoord.y = 1.0 - TexCoord.y;
#endif
	float4 Colour = PSY_SAMPLE_2D( HDRTex, TexCoord );
	outputFrag[0] = float4( Colour.xyz, 1.0 );
	PS_EXIT;
}

#endif

